name: Trivy Scan and Push to ECR
on:
  push:
    branches:
      - main

jobs:
  trivy_scan_and_push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # - name: Build, tag, and push image to Amazon ECR
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_REPOSITORY: sample-app
    #     IMAGE_TAG: latest
    #   run: |
    #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:sample-app .
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA


    - name: Build, tag, and push Docker image to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: sample-app
        IMAGE_TAG: sample_image
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      # run: |
      #   docker build -t sample-app/sample_iamge .
      #   docker push 393709411786.dkr.ecr.us-east-1.amazonaws.com/sample_image:latest
        
    - name: Trivy Scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest'
        format: 'table'

    - name: Log in to ECR
      id: login-ecr
      run: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_REGISTRY

    - name: Push Docker image with Trivy scan results as a tag
      run: |
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA $ECR_REGISTRY/$ECR_REPOSITORY:trivy-scan-$GITHUB_SHA
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:trivy-scan-$GITHUB_SHA
