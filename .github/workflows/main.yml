name: Build and push image to ECR
on: push
jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: sample-app
        IMAGE_TAG: sample_image
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    # - name: Run Trivy vulnerability scanner
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     image-ref: '393709411786.dkr.ecr.us-east-1.amazonaws.com/sample-app:latest'
    #     format: 'table'
    #     # output: 'trivy-results.sarif'
    #   env:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1
    - name: Run Trivy scan
      run: |
        docker pull aquasec/trivy
        docker run --rm aquasec/trivy --version
        SCAN_RESULT=$(docker run --rm -v ${{ github.workspace }}:/workdir aquasec/trivy --format json 393709411786.dkr.ecr.us-east-1.amazonaws.com/sample-app:latest)
        echo "$SCAN_RESULT" | grep -q '"Severity": "HIGH\|CRITICAL"' && exit 1 || exit 0
        
    # - name: Upload Trivy scan results to GitHub Security tab
    #   uses: github/codeql-action/upload-sarif@v2
    #   with:
    #     sarif_file: 'trivy-results.sarif'

    
    # - name: Install Trivy
    #   run: |
    #     wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.tar.gz
    #     tar zxvf trivy_0.18.3_Linux-64bit.tar.gz
    #     sudo mv trivy /usr/local/bin/

    # - name: Scan ECR Image
    #   run: |
    #     ECR_URI="39370941178.dkr.ecr.us-east-1.amazonaws.com/sample-app:latest"
    #     trivy image "$ECR_URI"
        
    # - name: Trivy Scan
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     # aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 393709411786.dkr.ecr.us-east-1.amazonaws.com
    #     image-ref: '393709411786.dkr.ecr.us-east-1.amazonaws.com/sample-app:latest'
    #     format: 'table'

     # - name: Log in to ECR
     #  id: login-ecr
     #  run: |
     #    aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 393709411786.dkr.ecr.us-east-1.amazonaws.com
      

    # - name: Push Docker image with Trivy scan results as a tag
    #   run: |
    #     docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA $ECR_REGISTRY/$ECR_REPOSITORY:trivy-scan-$GITHUB_SHA
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:trivy-scan-$GITHUB_SHA
